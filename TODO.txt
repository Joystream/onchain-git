# TODOs

## Write Pushed Git Data to Cosmos Store
1. helper: Receive request to list refs from Git
2. helper: Send request to gitservicecli to query refs in repo, chain ID being the first component
  of the URL
3. cli: Get refs in remote repo - create repo if it doesn't exist
4. cli: Write refs to terminal
5. helper: Read refs from cli output
6. helper: Write refs to terminal
7. helper: Receive request to push refs to remote
8. helper: Send request to gitservicecli to write refs to repo, chain ID being the first URL
  component
9. cli: Determine which references to update/add/delete on the blockchain
10. cli: Encode changes as a packfile
11. cli: Send packfile to server
12. server: Decode packfile and store contained changes to blockchain

### Authentication
We should probably use the auth module in order to implement account handling.

### On-Chain Data Modeling
We need to find out how the Git data (as contained in packfiles) can be stored on the blockchain.
First step: Determine contents of packfiles (i.e. look at the decoding of the latter).
